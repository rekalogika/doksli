"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[968],{5381:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>m,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var i=t(4848),a=t(8453);const o={title:"Konfigurasi ORM"},s=void 0,r={id:"tutorial/domain/orm",title:"Konfigurasi ORM",description:"Setelah pembuatan domain selesai, baru kita memikirkan bagaimana cara menyimpan",source:"@site/docs/03-tutorial/01-domain/03-orm.md",sourceDirName:"03-tutorial/01-domain",slug:"/tutorial/domain/orm",permalink:"/doksli/docs/tutorial/domain/orm",draft:!1,unlisted:!1,editUrl:"https://github.com/rekalogika/doksli/edit/main/docs/03-tutorial/01-domain/03-orm.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Konfigurasi ORM"},sidebar:"tutorialSidebar",previous:{title:"Domain Testing",permalink:"/doksli/docs/tutorial/domain/domain-testing"},next:{title:"Migrations",permalink:"/doksli/docs/tutorial/domain/migrations"}},m={},d=[{value:"Konfigurasi Untuk <code>Post</code>",id:"konfigurasi-untuk-post",level:2},{value:"Konfigurasi Untuk <code>Comment</code>",id:"konfigurasi-untuk-comment",level:2}];function c(n){const e={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:"Setelah pembuatan domain selesai, baru kita memikirkan bagaimana cara menyimpan\ndata ke database. Untuk melakukan itu, kita membuat konfigurasi ORM Doctrine\ndalam bentuk XML."}),"\n",(0,i.jsxs)(e.h2,{id:"konfigurasi-untuk-post",children:["Konfigurasi Untuk ",(0,i.jsx)(e.code,{children:"Post"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-xml",metastring:'title="config/doctrine/Post.orm.xml"',children:'<?xml version="1.0" encoding="UTF-8"?>\n\n<doctrine-mapping\n        xmlns="http://doctrine-project.org/schemas/orm/doctrine-mapping"\n        xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance"\n        xmlns:gedmo="http://gediminasm.org/schemas/orm/doctrine-extensions-mapping"\n        xsi:schemaLocation="http://doctrine-project.org/schemas/orm/doctrine-mapping https://www.doctrine-project.org/schemas/orm/doctrine-mapping.xsd">\n\n    <entity name="App\\Domain\\Entity\\Post">\n\n        <field\n                name="title"\n                type="string"\n                nullable="false" />\n\n        <field\n                name="content"\n                type="text"\n                nullable="false" />\n\n        <field\n                name="createdTime"\n                type="datetime"\n                nullable="false" />\n\n        <one-to-many\n                field="comments"\n                target-entity="App\\Domain\\Entity\\Comment"\n                mapped-by="post"\n                index-by="id"\n                fetch="EXTRA_LAZY">\n        </one-to-many>\n\n    </entity>\n</doctrine-mapping>\n'})}),"\n",(0,i.jsx)(e.admonition,{title:"Perbedaan Dengan Doctrine Standar",type:"caution",children:(0,i.jsx)(e.p,{children:"Umumnya, konfigurasi Doctrine akan mendefinisikan class repository. Namun kita\ntidak mendefinisikan repository di sini, karena kita akan menggunakan\nimplementasi repositori buatan kita sendiri."})}),"\n",(0,i.jsxs)(e.p,{children:["Di sini semua field-field adalah nama property dari class ",(0,i.jsx)(e.code,{children:"Post"}),", beserta\ndefinisinya di database."]}),"\n",(0,i.jsxs)(e.p,{children:["Doctrine akan secara otomatis memberikan nama tabel dan nama kolom yang sesuai\ndengan konvensi yang digunakan. Untuk sistem kita, Doctrine akan menggunakan\nsnake case dengan prefix ",(0,i.jsx)(e.code,{children:"t_"})," untuk nama tabel, sehingga untuk entity ",(0,i.jsx)(e.code,{children:"Post"}),"\nakan disimpan ke tabel ",(0,i.jsx)(e.code,{children:"t_post"}),"."]}),"\n",(0,i.jsxs)(e.p,{children:["Sedangkan untuk nama kolom menggunakan aturan sama, tetapi dengan prefix ",(0,i.jsx)(e.code,{children:"c_"}),".\nSehingga field ",(0,i.jsx)(e.code,{children:"title"})," akan disimpan ke kolom ",(0,i.jsx)(e.code,{children:"c_title"}),"."]}),"\n",(0,i.jsxs)(e.h2,{id:"konfigurasi-untuk-comment",children:["Konfigurasi Untuk ",(0,i.jsx)(e.code,{children:"Comment"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-xml",metastring:'title="config/doctrine/Comment.orm.xml"',children:'<?xml version="1.0" encoding="UTF-8"?>\n\n<doctrine-mapping\n        xmlns="http://doctrine-project.org/schemas/orm/doctrine-mapping"\n        xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance"\n        xmlns:gedmo="http://gediminasm.org/schemas/orm/doctrine-extensions-mapping"\n        xsi:schemaLocation="http://doctrine-project.org/schemas/orm/doctrine-mapping https://www.doctrine-project.org/schemas/orm/doctrine-mapping.xsd">\n\n    <entity name="App\\Domain\\Entity\\Comment">\n\n        <field\n                name="content"\n                type="text"\n                nullable="false" />\n\n        <field\n                name="createdTime"\n                type="datetime"\n                nullable="false" />\n\n        <many-to-one\n                field="post"\n                inversed-by="comments"\n                fetch="LAZY">\n        </many-to-one>\n\n    </entity>\n'})})]})}function l(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>r});var i=t(6540);const a={},o=i.createContext(a);function s(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);