"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[896],{9170:i=>{i.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Intro","href":"/doksli/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Arsitektur","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Arsitektur","href":"/doksli/docs/arsitektur/layering","docId":"arsitektur/layering","unlisted":false}],"href":"/doksli/docs/arsitektur/"},{"type":"category","label":"Tutorial","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Domain","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Entity","href":"/doksli/docs/tutorial/domain/entity","docId":"tutorial/domain/entity","unlisted":false},{"type":"link","label":"Domain Testing","href":"/doksli/docs/tutorial/domain/domain-testing","docId":"tutorial/domain/domain-testing","unlisted":false},{"type":"link","label":"Konfigurasi ORM","href":"/doksli/docs/tutorial/domain/orm","docId":"tutorial/domain/orm","unlisted":false},{"type":"link","label":"Migrations","href":"/doksli/docs/tutorial/domain/migrations","docId":"tutorial/domain/migrations","unlisted":false},{"type":"link","label":"Repository","href":"/doksli/docs/tutorial/domain/repository","docId":"tutorial/domain/repository","unlisted":false},{"type":"link","label":"Bekerja Dengan Entity","href":"/doksli/docs/tutorial/domain/bekerja","docId":"tutorial/domain/bekerja","unlisted":false}],"href":"/doksli/docs/tutorial/domain/"}],"href":"/doksli/docs/tutorial/"}]},"docs":{"arsitektur/index":{"id":"arsitektur/index","title":"Arsitektur","description":"","sidebar":"tutorialSidebar"},"arsitektur/layering":{"id":"arsitektur/layering","title":"Arsitektur","description":"Aplikasi didesain menggunakan DDD (domain-driven design) dan _onion","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Intro","description":"","sidebar":"tutorialSidebar"},"tutorial/domain/bekerja":{"id":"tutorial/domain/bekerja","title":"Bekerja Dengan Entity","description":"Setelah membuat domain, mapping database, dan repositorynya, kita sudah bisa","sidebar":"tutorialSidebar"},"tutorial/domain/domain-testing":{"id":"tutorial/domain/domain-testing","title":"Domain Testing","description":"Setelah ada domain yang sudah diimplementasikan, kita buat unit test sederhana.","sidebar":"tutorialSidebar"},"tutorial/domain/entity":{"id":"tutorial/domain/entity","title":"Entity","description":"Untuk memulai, pertama-tama kita perlu desain domain-nya. Komponen utama domain","sidebar":"tutorialSidebar"},"tutorial/domain/index":{"id":"tutorial/domain/index","title":"Domain","description":"Untuk tutorial ini, kita akan membuat aplikasi blog sederhana. Aplikasi ini","sidebar":"tutorialSidebar"},"tutorial/domain/migrations":{"id":"tutorial/domain/migrations","title":"Migrations","description":"Migrations adalah cara untuk mengelola perubahan skema database.","sidebar":"tutorialSidebar"},"tutorial/domain/orm":{"id":"tutorial/domain/orm","title":"Konfigurasi ORM","description":"Setelah pembuatan domain selesai, baru kita memikirkan bagaimana cara menyimpan","sidebar":"tutorialSidebar"},"tutorial/domain/repository":{"id":"tutorial/domain/repository","title":"Repository","description":"Repository pattern adalah pola design yang memberikan abstraksi untuk mengakses","sidebar":"tutorialSidebar"},"tutorial/index":{"id":"tutorial/index","title":"Tutorial","description":"","sidebar":"tutorialSidebar"}}}}')}}]);